// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Salutation {
  MR
  MRS
  MS
}

enum Gender {
  Male
  Female
}

enum PreferenceType {
  HOBBIES
  MUSIC
  MOVIETVSHOW
  SPORTS
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  hashed_password String
  profile         Profile?
}

model Address {
  id       Int       @id @default(autoincrement())
  street_number   String
  street_name String
  postcode String
  city_town     String
  state    String
  profile  Profile[]
}

model Preference {
  id          Int     @id @default(autoincrement())
  preference_type PreferenceType @default(HOBBIES)
  preference_name String
  profile     Profile @relation(fields: [profileId], references: [id])
  profileId   Int
}

model PersonName {
  id     Int  @id @default(autoincrement())
  salutation Salutation @default(MR)
  first_name String
  last_name  String

  person Person[]
}

model Person {
  id Int @id @default(autoincrement())

  name PersonName @relation(fields: [nameId], references: [id])
  nameId Int

  ownProfile Profile? @relation("owner")
  profileSpouse Profile? @relation("spouse")

  date_of_birth  DateTime?
  gender         Gender   @default(Male)
  marital_status Boolean  @default(false)
}

model Profile {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int  @unique

  person Person @relation(fields: [personId], references: [id], name: "owner")
  personId Int @unique

  spouse Person? @relation(fields: [spouseId], references: [id], name: "spouse")
  spouseId Int @unique

  address   Address @relation(fields: [addressId], references: [id])
  addressId Int

  personal_preferences Preference[]
}
